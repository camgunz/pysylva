mod sys

req libc

fn exit(code: i32) {
  libc.exit(code)
}

fn abort() {
  libc.abort()
}

fn print(msg: &String) {
  libc.write(libc.STDOUT_FILENO, cptr(cvoid(msg::bytes)), msg.get_length())
}

fn printerr(msg: &String) {
  libc.write(libc.STDERR_FILENO, cptr(cvoid(msg::bytes)), msg.get_length())
}

fn echo(msg: &String) {
  print(msg)
  print("\n")
}

fn echoerr(msg: &String) {
  printerr(msg)
  printerr("\n")
}

fn echoexit(code: i32, msg: &String) {
  echoerr(msg)
  exit(code)
}

fn die(msg: &String) {
  echoexit(-1i32, msg)
}

module sys

requirement os

fn print(message: str) {
  os.write(os.STDOUT, cptr(cvoid(message)), message::size)
}

fn printerr(message: str) {
  os.write(os.STDERR, cptr(cvoid(message)), message::size)
}

fn exit(code: i32) {
  os.exit(code)
}

fn abort() {
  os.abort()
}

fn echo(message: str) {
  print(message)
  print("\n")
}

fn echoerr(message: str) {
  printerr(message)
  printerr("\n")
}

fn echoexit(code: i32, message: str) {
  echoerr(message)
  exit(code)
}

fn die(message: str) {
  echoerr(message)
  exit(-1i32)
}
